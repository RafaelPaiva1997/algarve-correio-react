{"version":3,"sources":["AutoFetch/AutoFetch.js","Components/Form/ControlledInput.js","App.js","Components/Top/AccountList.js","Components/Elements/Account.js","Components/Top/EmailInfo.js","Components/Top/Login.js","Components/Elements/NavButton.js","Components/Form/ControlledForm.js","Components/Form/ControlledSearch.js","Components/Form/ListPicker.js","Components/SendMail/EmailArea.js","Components/SendMail/SendMail.js","Components/Top/NavBar.js","serviceWorker.js","index.js"],"names":["global","config","require","fetch_body","lib","action","data","method","headers","Accept","Content-Type","body","JSON","stringify","auth","id","user","_id","exports","post","callbak","fetch","url","then","res","json","post_code","login","username","password","ControlledInput","props","_this","Object","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","value","getValue","bind","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onClickFocus","input","React","createRef","current","focus","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","fieldset","onClick","text","legend","ref","type","disabled","placeholder","onChange","e","setState","target","Component","App","cookies","get","logged","selected","mailingList","loading","findKey","email","$regex","setUser","select","clear","updateKey","updateMailingList","set","_Components_Top_Login__WEBPACK_IMPORTED_MODULE_11__","_Components_Top_EmailInfo__WEBPACK_IMPORTED_MODULE_10__","assign","_Components_Top_AccountList__WEBPACK_IMPORTED_MODULE_8__","_Components_Top_NavBar__WEBPACK_IMPORTED_MODULE_9__","fields","map","var","withCookies","AccountList","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","items","update","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","getItems","AutoFetch","key","D_paiva_algarve_correio_react_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","inf","sup","_this3","react__WEBPACK_IMPORTED_MODULE_7___default","_Elements_Account__WEBPACK_IMPORTED_MODULE_10__","item","react_loading_animation__WEBPACK_IMPORTED_MODULE_8___default","Account","react__WEBPACK_IMPORTED_MODULE_5___default","nome","telefone","EmailInfo","rfs","forEach","remove","out","_this4","class","_Form_ControlledInput__WEBPACK_IMPORTED_MODULE_9__","react_loading_animation__WEBPACK_IMPORTED_MODULE_7___default","Login","result","alert","alt","src","_Form_ControlledInput__WEBPACK_IMPORTED_MODULE_8__","NavButton","react_default","label","ControlledForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","add","assertThisInitialized","objectSpread","lib_default","ControlledSearch","search","ListPicker","onSelect","EmailArea","SendMail","template","subject","send","from","to","html","innerHTML","ListPicker_ListPicker","updateSending","dangerouslySetInnerHTML","__html","EmailArea_EmailArea","NavBar","sending","ControlledSearch_ControlledSearch","ControlledForm_ControlledForm","NavButton_NavButton","SendMail_SendMail","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.941b94c0.chunk.js","sourcesContent":["const config = require(\"./config.json\");\r\n\r\nconst fetch_body = (lib, action, data) => {\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json, text/plain, */*\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      lib,\r\n      action,\r\n      data,\r\n      auth: {\r\n        id: global.user._id,\r\n        user: global.user\r\n      }\r\n    })\r\n  };\r\n};\r\n\r\nexports.post = (lib, action, data, callbak) => {\r\n  fetch(config.url, fetch_body(lib, action, data))\r\n    .then(res => res.json())\r\n    .then(callbak);\r\n};\r\n\r\nexports.post_code = (lib, action, data, callbak) => {\r\n  fetch(config.url, fetch_body(lib, action, data)).then(callbak);\r\n};\r\n\r\nexports.login = (username, password, callbak) => {\r\n  fetch(config.login, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json, text/plain, */*\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ data: { login: { username, password } } })\r\n  })\r\n    .then(res => res.json())\r\n    .then(callbak);\r\n};\r\n","import React from \"react\";\r\n\r\nexport default class ControlledInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { value: this.props.value };\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.onClickFocus = this.onClickFocus.bind(this);\r\n\r\n        this.input = React.createRef();\r\n    }\r\n\r\n    getValue() {\r\n        return this.state.value;\r\n    }\r\n\r\n    onClickFocus() {\r\n        this.input.current.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <fieldset className={this.props.fieldset} onClick={this.onClickFocus}>\r\n                {this.props.text && (\r\n                    <legend className={this.props.legend}>\r\n                        {this.props.text}\r\n                    </legend>\r\n                )}\r\n                <input\r\n                    ref={this.input}\r\n                    id={this.props.id}\r\n                    type={this.props.type}\r\n                    className={this.props.className}\r\n                    disabled={this.props.disabled}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.state.value}\r\n                    onChange={e => this.setState({ value: e.target.value })}\r\n                />\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport AccountList from \"./Components/Top/AccountList\";\r\nimport NavBar from \"./Components/Top/NavBar\";\r\nimport EmailInfo from \"./Components/Top/EmailInfo\";\r\nimport Login from \"./Components/Top/Login\";\r\nimport \"./Components/SendMail/SendMail.css\";\r\nimport \"./Components/Top/Top.css\";\r\nimport \"./Components/Form/Form.css\";\r\nimport \"./Components/Elements/Elements.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { cookies } = props;\r\n\r\n    global.user = cookies.get(\"user\");\r\n    global.logged = cookies.get(\"logged\");\r\n\r\n    this.state = {\r\n      selected: null,\r\n      mailingList: \"emails-em-bruto\",\r\n      loading: false,\r\n      logged: cookies.get(\"logged\") || false,\r\n      user: cookies.get(\"user\") || {},\r\n      findKey: { email: { $regex: \"\" } }\r\n    };\r\n\r\n    this.setUser = this.setUser.bind(this);\r\n    this.select = this.select.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.updateKey = this.updateKey.bind(this);\r\n    this.updateMailingList = this.updateMailingList.bind(this);\r\n  }\r\n\r\n  setUser(user, logged) {\r\n\r\n    const { cookies } = this.props;\r\n\r\n    global.user = user;\r\n    global.logged = logged;\r\n    cookies.set(\"user\", user);\r\n    cookies.set(\"logged\", logged);\r\n    this.setState({ user, logged });\r\n  }\r\n\r\n  select(e) {\r\n    this.setState({ selected: e });\r\n  }\r\n\r\n  clear(current) {\r\n    this.setState({ loading: current });\r\n  }\r\n\r\n  updateKey(e) {\r\n    this.setState({ findKey: e });\r\n  }\r\n\r\n  updateMailingList(e) {\r\n    this.setState({ mailingList: e });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\" className=\"dis-flex\">\r\n        {!this.state.logged && <Login setUser={this.setUser} />}\r\n        {this.state.selected && (\r\n          <EmailInfo\r\n            loading={this.loading}\r\n            clear={this.clear}\r\n            selected={this.state.selected}\r\n            select={this.select}\r\n            {...props}\r\n          />\r\n        )}\r\n        {this.state.logged && (\r\n          <AccountList\r\n            findKey={this.state.findKey}\r\n            loading={this.loading}\r\n            selected={this.state.selected}\r\n            select={this.select}\r\n            mailingList={this.state.mailingList}\r\n          />\r\n        )}\r\n        {this.state.logged && (\r\n          <NavBar\r\n            loading={this.loading}\r\n            clear={this.clear}\r\n            mailingList={this.state.mailingList}\r\n            updateKey={this.updateKey}\r\n            updateMailingList={this.updateMailingList}\r\n            setUser={this.setUser}\r\n            {...props}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nvar props = {\r\n  fields: [\r\n    [\"nome\", \"Nome\", \"text\"],\r\n    [\"telefone\", \"Nº Telemóvel\", \"tel\"],\r\n    [\"email\", \"Email\", \"email\"]\r\n  ].map(e => ({ var: e[0], legend: e[1], type: e[2] }))\r\n};\r\n\r\nexport default withCookies(App);\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"react-loading-animation\";\r\nimport AutoFetch from \"../../AutoFetch/AutoFetch\";\r\nimport Account from \"../Elements/Account\";\r\n\r\nexport default class AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { items: null };\r\n\r\n    this.update = this.update.bind(this);\r\n    this.getItems = this.getItems.bind(this);\r\n    \r\n    global.getItems = this.getItems;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.update();\r\n  }\r\n\r\n  getItems() {\r\n    return this.state.items;\r\n  }\r\n\r\n  update() {\r\n    !this.props.selected && AutoFetch.post(\r\n      \"emails\",\r\n      \"findLimited\",\r\n      {\r\n        key: {\r\n          ...{\r\n            mailingList: this.props.mailingList\r\n          },\r\n          ...this.props.findKey\r\n        },\r\n        inf: 0,\r\n        sup: 1000\r\n      },\r\n      res => this.setState({ items: res })\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.props = props;\r\n    this.setState({ items: null });\r\n    this.update();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"account-list\" className=\"dis-flex-col\">\r\n        {!this.props.loading && this.state.items ? (\r\n          this.state.items.map(e => (\r\n            <Account key={e.email} item={e} {...this.props} />\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Account extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"account\" className=\"dis-flex-align brd-round\" onClick={() => this.props.select(this.props.item)}>\r\n                <span className=\"text-xs td-3 font-info td-space-before\">{this.props.item.email}</span>\r\n                <span className=\"text-xs td-3 font-info align-center\">{this.props.item.nome}</span>\r\n                <span className=\"text-xs td-3 font-info td-space-after align-right\">{this.props.item.telefone}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Loading from \"react-loading-animation\";\r\nimport AutoFetch from \"../../AutoFetch/AutoFetch\";\r\nimport ControlledInput from \"../Form/ControlledInput\";\r\n\r\nexport default class EmailInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rfs = {};\r\n    this.props.fields.forEach(e => (this.rfs[e.var] = React.createRef()));\r\n\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n\r\n  update() {\r\n    var out = {mailingList: this.props.selected.mailingList};\r\n    this.props.fields.forEach(\r\n      e => (out[e.var] = this.rfs[e.var].current.getValue())\r\n    );\r\n\r\n    this.props.clear(true);\r\n    AutoFetch.post_code(\r\n      \"emails\",\r\n      \"update\",\r\n      {\r\n        key: { email: this.props.selected.email },\r\n        update: out\r\n      },\r\n      () => {this.props.clear(false); this.props.select(null)}\r\n    );\r\n  }\r\n  \r\n\r\n  remove() {\r\n    this.props.clear(true);\r\n    AutoFetch.post_code(\"emails\", \"deleteOne\", {\r\n      key: { email: this.props.selected.email }\r\n    }, () => {this.props.clear(false); this.props.select(null)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"black-background\">\r\n        <div id=\"email-info\" class=\"dis-flex-col dis-flex-align\">\r\n          <h1 id=\"detalhes-email\">Detalhes Email</h1>\r\n          {this.props.fields.map(e => (\r\n            <ControlledInput\r\n              key={e.var}\r\n              ref={this.rfs[e.var]}\r\n              type={e.type}\r\n              value={this.props.selected[e.var]}\r\n              className=\"transparent-input big-input\"\r\n              fieldset=\"red-fieldset big-fieldset\"\r\n              legend=\"red-legend big-legend\"\r\n              placeholder=\"Escreva aqui\"\r\n              text={e.legend}\r\n            />\r\n          ))}\r\n          {this.props.loading ? (\r\n            <Loading />\r\n          ) : (\r\n            <div className=\"dis-flex\">\r\n              <div className=\"add-button button-fixed\"  onClick={this.update}>Actualizar</div>\r\n              <div className=\"add-button button-fixed\" onClick={this.remove}>\r\n                Remover\r\n              </div>\r\n              <div className=\"add-button button-fixed\" onClick={() => this.props.select(null)}>\r\n                Fechar\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AutoFetch from \"../../AutoFetch/AutoFetch\";\r\nimport ControlledInput from \"../Form/ControlledInput\";\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.username = React.createRef();\r\n    this.password = React.createRef();\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login() {\r\n    if (\r\n      this.username.current.getValue() !== \"\" &&\r\n      this.password.current.getValue()\r\n    )\r\n      AutoFetch.login(\r\n        this.username.current.getValue(),\r\n        this.password.current.getValue(),\r\n        result =>\r\n          result === {}\r\n            ? alert(\"Login Inválido!\")\r\n            : this.props.setUser(result, true)\r\n      );\r\n    else alert(\"Por favor preencha os campos!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"background-block\">\r\n        <div id=\"login\">\r\n          <img\r\n            id=\"login-logo\"\r\n            alt=\"logo\"\r\n            src=\"https://www.metalpro.pt/img/metalpro.png?1548892429\"\r\n          />\r\n          <ControlledInput\r\n            ref={this.username}\r\n            type=\"text\"\r\n            className=\"transparent-input big-input\"\r\n            fieldset=\"red-fieldset big-fieldset\"\r\n            legend=\"red-legend big-legend\"\r\n            placeholder=\"Escreva aqui\"\r\n            text={\"Username\"}\r\n          />\r\n          <ControlledInput\r\n            ref={this.password}\r\n            type=\"password\"\r\n            className=\"transparent-input big-input\"\r\n            fieldset=\"red-fieldset big-fieldset\"\r\n            legend=\"red-legend big-legend\"\r\n            placeholder=\"Escreva aqui\"\r\n            text={\"Password\"}\r\n          />\r\n          <div className=\"add-button button-fixed\" onClick={this.login}>\r\n            Login\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NavButton extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"nav-button\"\r\n                className=\"dis-flex-align dis-flex-justify\"\r\n                onClick={this.props.onClick}\r\n            >\r\n                {this.props.label}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Loading from \"react-loading-animation\";\r\nimport AutoFetch from \"../../AutoFetch/AutoFetch\";\r\nimport ControlledInput from \"./ControlledInput\";\r\n\r\nexport default class ControlledForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { loading: false };\r\n\r\n    this.rfs = {};\r\n    this.props.fields.forEach(e => (this.rfs[e.var] = React.createRef()));\r\n\r\n    this.add = this.add.bind(this);\r\n  }\r\n\r\n  add() {\r\n    var out = {};\r\n    this.props.fields.forEach(\r\n      e => (out[e.var] = this.rfs[e.var].current.getValue())\r\n    );\r\n\r\n    this.props.clear(true);\r\n    AutoFetch.post_code(\r\n      \"emails\",\r\n      \"add\",\r\n      {\r\n        item: { ...{ mailingList: this.props.mailingList }, ...out }\r\n      },\r\n      () => this.props.clear(false)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"controlled-form\" className=\"dis-flex-col dis-flex-align\">\r\n        {this.props.fields.map(e => (\r\n          <ControlledInput\r\n            key={e.var}\r\n            ref={this.rfs[e.var]}\r\n            type={e.type}\r\n            className=\"transparent-input\"\r\n            fieldset=\"red-fieldset\"\r\n            legend=\"red-legend\"\r\n            placeholder=\"Escreva aqui\"\r\n            text={e.legend}\r\n          />\r\n        ))}\r\n        {this.props.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div className=\"add-button button-fixed\" onClick={this.add}>\r\n            Adicionar\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Loading from \"react-loading-animation\";\r\nimport ControlledInput from \"./ControlledInput\";\r\n\r\nexport default class ControlledSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.search = React.createRef();\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    if(this.search.current.getValue()) this.props.updateKey({ email: { $regex: this.search.current.getValue() } });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"controlled-search\" className=\"dis-flex-col dis-flex-align\">\r\n        <ControlledInput\r\n          ref={this.search}\r\n          type=\"text\"\r\n          className=\"transparent-input\"\r\n          fieldset=\"red-fieldset\"\r\n          legend=\"red-legend\"\r\n          placeholder=\"Escreva aqui\"\r\n          text=\"Email\"\r\n        />\r\n        {this.props.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div className=\"add-button button-fixed\" onClick={this.onClick}>\r\n            Procurar\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ListPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { value: this.props.value };\r\n\r\n    this.getValue = this.getValue.bind(this);\r\n  }\r\n\r\n  getValue() {\r\n    return this.state.value;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        id=\"list-picker\"\r\n        className={this.props.className}\r\n        value={this.state.value}\r\n        onChange={e => {\r\n          this.setState({ value: e.target.value });\r\n          this.props.onSelect(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"emails-em-bruto\">Emails em Bruto</option>\r\n        <option value=\"emails-validados\">Emails Validados</option>\r\n        <option value=\"emails-captados\">Emails Captados</option>\r\n      </select>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class EmailArea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { value: this.props.value };\r\n\r\n    this.getValue = this.getValue.bind(this);\r\n  }\r\n\r\n  getValue() {\r\n    return this.state.value;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <fieldset className={this.props.fieldset} onClick={this.onClickFocus}>\r\n        {this.props.text && (\r\n          <legend className={this.props.legend}>{this.props.text}</legend>\r\n        )}\r\n        <textarea\r\n          id=\"email-area\"\r\n          value={this.state.value}\r\n          placeholder={this.props.placeholder}\r\n          onChange={e => this.setState({ value: e.target.value })}\r\n        />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ListPicker from \"../Form/ListPicker\";\r\nimport EmailArea from \"./EmailArea\";\r\nimport Loading from \"react-loading-animation\";\r\nimport AutoFetch from \"../../AutoFetch/AutoFetch\";\r\nimport ControlledInput from \"../Form/ControlledInput\";\r\n\r\nexport default class SendMail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mailingList: \"emails-em-bruto\",\r\n      template: false,\r\n      loading: false\r\n    };\r\n\r\n    this.subject = React.createRef();\r\n    this.email = React.createRef();\r\n    this.template = React.createRef();\r\n\r\n    this.send = this.send.bind(this);\r\n  }\r\n\r\n  send() {\r\n    var data = {\r\n      from: \"noreply@marketing.metalpro.pt\",\r\n      to: this.state.mailingList,\r\n      subject: this.subject.current.getValue(),\r\n      text: this.email.current.getValue()\r\n    };\r\n\r\n    if (this.state.template) data.html = this.template.current.innerHTML;\r\n\r\n    this.setState({ loading: true });\r\n    AutoFetch.post_code(\"emails\", \"bulkMail\", data, e => {\r\n      alert(\"Email Enviado!\");\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"shutdown-screen\">\r\n        <div id=\"send-mail\" className=\"dis-flex-col dis-flex-align\">\r\n          <div id=\"send-mail-title-div\" className=\"dis-flex dis-flex-align\">\r\n            <h1 id=\"send-mail-title\">Enviar Email</h1>\r\n            <ListPicker\r\n              className=\"list-picker-mail\"\r\n              value={this.state.mailingList}\r\n              onSelect={e => this.setState({ mailingList: e })}\r\n            />\r\n            {this.state.loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <div className=\"dis-flex dis-flex-align\">\r\n                <div className=\"add-button\" onClick={this.send}>\r\n                  Enviar\r\n                </div>\r\n                <div\r\n                  id=\"template-button\"\r\n                  className=\"add-button\"\r\n                  onClick={() =>\r\n                    this.setState(e => ({ template: !e.template }))\r\n                  }\r\n                >\r\n                  {this.state.template ? \"Texto\" : \"Template\"}\r\n                </div>\r\n                <div\r\n                  className=\"add-button\"\r\n                  onClick={() => this.props.updateSending(false)}\r\n                >\r\n                  Fechar\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <ControlledInput\r\n            ref={this.subject}\r\n            type=\"text\"\r\n            id=\"subject-fieldset\"\r\n            className=\"transparent-input\"\r\n            fieldset=\"red-fieldset\"\r\n            legend=\"red-legend\"\r\n            placeholder=\"Escreva aqui\"\r\n            text=\"Assunto\"\r\n          />\r\n          {this.state.template && (\r\n            <div\r\n              ref={this.template}\r\n              id=\"template-holder\"\r\n              dangerouslySetInnerHTML={{ __html: template }}\r\n            />\r\n          )}\r\n          <EmailArea\r\n            ref={this.email}\r\n            fieldset=\"red-fieldset email-fieldset\"\r\n            legend=\"red-legend\"\r\n            placeholder=\"Escreva aqui\"\r\n            text=\"Email\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nvar template =\r\n  '<div style=\"width: 500px; height: 500px; background-color: #d6ae10; overflow: hidden;\"><div style=\"display: flex; background-color: white; width: 500px; height: 20%; padding-left: 4%;\"><img style=\"height:100%;\" src=\"https://www.metalpro.pt/img/metalpro.png?1545522387\" /></div><div style=\"margin-top: 6.5%; margin-left: 6%; height: 65%; width: 85%; background-color: white; font-family: sans-serif; font-size: 12px; padding: 7px; border-radius: 10px; outline: none; text-align:justify;\" contenteditable=\"true\"><div style=\"font-size: 16px; text-align: center; width=100%;\">Título</div><div></br></div><div></br></div>Escreva aqui<div></br></div><div></br></div><div style=\"width: 100%; text-align: center;\"><a href=\"http://metalpro-newsletter.surge.sh/\" style=\"color: #d6ae10; text-align: center;\">Carregue aqui para validar os seus dados.</a></div></div></div>';\r\n","import React, { Component } from \"react\";\r\nimport NavButton from \"../Elements/NavButton\";\r\nimport ControlledForm from \"../Form/ControlledForm\";\r\nimport ControlledSearch from \"../Form/ControlledSearch\";\r\nimport ListPicker from \"../Form/ListPicker\";\r\nimport SendMail from \"../SendMail/SendMail\";\r\n\r\nexport default class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { sending: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"nav-bar\" className=\"dis-flex-col dis-flex-align\">\r\n        <ListPicker\r\n          value={this.props.mailingList}\r\n          onSelect={this.props.updateMailingList}\r\n        />\r\n        <ControlledSearch {...this.props} />\r\n        <ControlledForm {...this.props} />\r\n        <NavButton\r\n          label=\"Enviar Email\"\r\n          onClick={() => this.setState(e => ({ sending: !e.sending }))}\r\n        />\r\n        <NavButton\r\n          label=\"Logout\"\r\n          onClick={() => this.props.setUser({}, false)}\r\n        />\r\n        {this.state.sending && (\r\n          <SendMail updateSending={e => this.setState({ sending: e })} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}